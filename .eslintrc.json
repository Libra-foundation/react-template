{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["plugin:react/recommended", "plugin:eslint-comments/recommended"],
  "overrides": [
    {
      "files": ["*.test.*"],
      "plugins": ["jest"],
      "env": {
        "jest/globals": true
      },
      "extends": ["plugin:jest/recommended"],
      "rules": {
        "@typescript-eslint/unbound-method": "off",
        "jest/unbound-method": "error"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json"]
  },
  "plugins": ["react", "@typescript-eslint"],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "eslint-comments/require-description": [
      "error",
      {"ignore": ["eslint-enable"]}
    ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": [
      "warn",
      {"default": "generic", "readonly": "generic"}
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "object": {
            "message": "In TS object mean any JS object. This type is way too broad, consider narrowing it down."
          },
          "Function": {
            "message": "The Function type is too braod. Using this type will cause you trouble with readonly.",
            "fixWith": "()=>void"
          },
          "CallableFunction": {
            "message": "The CallableFunction type is too braod. Using this type will cause you trouble with readonly.",
            "fixWith": "()=>void"
          },
          "NewableFunction": {
            "message": "The NewableFunction type is too braod. Using this type will cause you trouble with readonly.",
            "fixWith": "()=>void"
          },
          "any": {
            "message": "The any type is unsafe and too broad. Consider using a more constrained type if possible.",
            "fixWith": "unknown"
          }
        },
        "extendDefaults": true
      }
    ],
    "@typescript-eslint/class-literal-property-style": "warn",
    "@typescript-eslint/consistent-generic-constructors": "warn",
    "@typescript-eslint/consistent-indexed-object-style": "warn",
    "@typescript-eslint/consistent-type-assertions": "warn",
    "@typescript-eslint/consistent-type-definitions": "warn",
    "@typescript-eslint/consistent-type-exports": "warn",
    "@typescript-eslint/consistent-type-imports": [
      "warn",
      {"fixStyle": "inline-type-imports"}
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-member-accessibility": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/method-signature-style": ["warn", "property"],
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": ["accessor"],
        "format": ["UPPER_CASE", "camelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["accessor"],
        "format": ["UPPER_CASE", "PascalCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid",
        "types": ["boolean"],
        "prefix": ["IS_", "is"]
      },
      {
        "selector": [
          "variable",
          "classProperty",
          "typeProperty",
          "parameterProperty"
        ],
        "format": ["PascalCase"],
        "types": ["function"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["variable", "parameter"],
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": ["variable", "parameter"],
        "modifiers": ["destructured"],
        "types": ["boolean", "function"],
        "format": null,
        "prefix": []
      },
      {
        "selector": ["objectLiteralProperty", "objectLiteralMethod"],
        "format": null
      },
      {
        "selector": ["variable"],
        "format": ["UPPER_CASE"],
        "modifiers": ["const"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["variable"],
        "format": ["UPPER_CASE"],
        "modifiers": ["const"],
        "types": ["boolean"],
        "prefix": ["IS_"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["enumMember"],
        "format": ["UPPER_CASE"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["classProperty", "typeProperty", "parameterProperty"],
        "format": ["UPPER_CASE"],
        "modifiers": ["readonly"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["classProperty", "typeProperty", "parameterProperty"],
        "format": ["UPPER_CASE"],
        "modifiers": ["readonly"],
        "types": ["boolean"],
        "prefix": ["IS_"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "classMethod",
          "typeMethod",
          "classProperty",
          "typeProperty",
          "parameterProperty"
        ],
        "format": ["camelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "classMethod",
          "typeMethod",
          "classProperty",
          "typeProperty",
          "parameterProperty"
        ],
        "format": ["PascalCase"],
        "types": ["boolean"],
        "prefix": ["is"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["parameter", "variable"],
        "format": ["snake_case"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["parameter", "variable"],
        "format": ["snake_case"],
        "types": ["boolean"],
        "prefix": ["is_"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": [
          "function",
          "class",
          "interface",
          "typeAlias",
          "enum",
          "typeParameter"
        ],
        "format": ["PascalCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-base-to-string": "warn",
    "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    "@typescript-eslint/no-confusing-void-expression": "warn",
    "@typescript-eslint/no-duplicate-enum-values": "warn",
    "@typescript-eslint/no-dynamic-delete": "warn",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-extraneous-class": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-invalid-void-type": "warn",
    "@typescript-eslint/no-meaningless-void-operator": "warn",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/no-redundant-type-constituents": "warn",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
    "@typescript-eslint/no-unnecessary-condition": "warn",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-declaration-merging": "warn",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-useless-empty-export": "warn",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/parameter-properties": "warn",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-enum-initializers": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-includes": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": [
      "warn",
      {
        "ignoreConditionalTests": false,
        "ignoreTernaryTests": false,
        "ignoreMixedLogicalExpressions": false
      }
    ],
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/prefer-readonly": "warn",
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "warn",
      {"ignoreInferredTypes": true}
    ],
    "@typescript-eslint/prefer-reduce-type-parameter": "warn",
    "@typescript-eslint/prefer-return-this-type": "warn",
    "@typescript-eslint/prefer-string-starts-ends-with": "warn",
    "@typescript-eslint/promise-function-async": "warn",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/sort-type-constituents": "warn",
    "@typescript-eslint/strict-boolean-expressions": "warn",
    "@typescript-eslint/typedef": [
      "warn",
      {"variableDeclaration": true, "variableDeclarationIgnoreFunction": true}
    ],
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "warn",
    "@typescript-eslint/default-param-last": "warn",
    "@typescript-eslint/dot-notation": "warn",
    "@typescript-eslint/no-dupe-class-members": "warn",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-invalid-this": "warn",
    "@typescript-eslint/no-loop-func": "warn",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/no-redeclare": "warn",
    "@typescript-eslint/no-throw-literal": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-use-before-define": "warn",
    "@typescript-eslint/no-useless-constructor": "warn",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/return-await": "warn",

    "array-callback-return": ["error", {"checkForEach": true}],
    "constructor-super": "error",
    "for-direction": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-ex-assign": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-misleading-character-class": "error",
    "no-new-native-nonconstructor": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-this-before-super": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unused-private-class-members": "error",
    "no-useless-backreference": "error",
    "require-atomic-updates": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "no-unsafe-optional-chaining": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "block-scoped-var": "error",
    "class-methods-use-this": "error",
    "complexity": ["error", 50],
    "default-case": "error",
    "default-case-last": "error",
    "consistent-return": "error",
    "eqeqeq": "error",
    "func-style": ["error", "declaration", {"allowArrowFunctions": true}],
    "no-alert": "error",
    "no-case-declarations": "error",
    "no-confusing-arrow": "error",
    "no-delete-var": "error",
    "no-else-return": "error",
    "no-empty": "error",
    "no-eq-null": "error",
    "no-extra-semi": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-label-var": "error",
    "no-lonely-if": "error",
    "no-nested-ternary": "error",
    "no-redeclare": "error",
    "no-useless-escape": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "prefer-const": "error",
    "require-await": "error",
    "require-yield": "error",
    "yoda": "error"
  }
}
